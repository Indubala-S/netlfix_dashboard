# -*- coding: utf-8 -*-
"""python_dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ldkROzyrApUJDcu4C8YXo0eJ--K0CEXD

# Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_excel("/content/partpdf_1758712161434_netflix_titles.xlsx",sheet_name='netflix_titles')
data.head(5)

data=pd.read_excel("/content/partpdf_1758712161434_netflix_titles.xlsx",sheet_name='netflix_titles_directors')
data.head(5)

data=pd.read_excel("/content/partpdf_1758712161434_netflix_titles.xlsx",sheet_name='netflix_titles_countries')
data.head(5)

data=pd.read_excel("/content/partpdf_1758712161434_netflix_titles.xlsx",sheet_name='netflix_titles_cast')
data.head(5)

data=pd.read_excel("/content/partpdf_1758712161434_netflix_titles.xlsx",sheet_name='netflix_titles_category')
data.head(5)

"""# Merging"""

all_sheets=pd.ExcelFile("/content/partpdf_1758712161434_netflix_titles.xlsx")
all_sheets.sheet_names

all_sheets = pd.read_excel('/content/partpdf_1758712161434_netflix_titles.xlsx', sheet_name=None)

merged_df = pd.concat(all_sheets.values(), ignore_index=True)
merged_df.head(5)

merged_df = merged_df.set_index('show_id')

merged_df.info()

"""Analytical qn answer: I used left join because I want to keep all the records from main netflix_titles file and see which ones lack extra info by the presence of NaN values, without losing any titles that might not have corresponding data elsewhere.

# Missing values handling
"""

merged_df.isna().sum()

num_cols = merged_df.select_dtypes(include=['number']).columns
cat_cols = merged_df.select_dtypes(include=['object', 'category']).columns
merged_df[num_cols] = merged_df[num_cols].fillna(merged_df[num_cols].mean())
for col in cat_cols:
    merged_df[col] = merged_df[col].fillna(merged_df[col].mode()[0])

merged_df.isna().sum()

merged_df['date_added'] = pd.to_datetime(merged_df['date_added'], errors='coerce')
merged_df['year_added'] = merged_df['date_added'].dt.year
merged_df.head(5)

"""Analytical qn ans:
I handled missing values in the country column (a categorical variable) by filling them with the most frequent value ,that is mode. from the existing data
"""

merged_df.duplicated().sum()

merged_df.drop_duplicates(inplace=True)

"""# Exploding listed_in column"""

merged_df['listed_in'] = merged_df['listed_in'].str.split(', ')
exploded_df = merged_df.explode('listed_in')
exploded_df = exploded_df.reset_index(drop=True)

exploded_df.head()

"""Analytical qn ans: Exploding multi-value columns enables more detailed and actionable business intelligence, supporting better content strategy, personalized recommendations, and audience analysisâ€”none of which are possible when such data is locked in a single string per show.By this we could find Genre or Actor Popularity Over Time, Most Frequent Genre or Actor,we  can identify which genres or actors most frequently appear together in the same shows and many moree...

# Visualization
"""

top_genres = exploded_df['listed_in'].value_counts().head(10)
plt.figure(figsize=(10,6))
top_genres.plot(kind='bar', color='green')
plt.title('Top 10 Most Frequent Genres on Netflix')
plt.xlabel('Genre')
plt.ylabel('Number of Titles')
plt.show()

"""Analytical qn ans: Bar graph insights:
!.International Movies are very much prevalent in Netflix
!.While Netflix provides a range of genres, its catalog is heavily weighted    toward international films.
!.The next most common genres are "Dramas," "Comedies," and "International TV Shows." These genres, still represent core areas of Netflix's content strategy.
!.Netflix have a competitive strategy to attract and retain subscribers globally.

# save as csv
"""

exploded_df.to_csv('netflix.csv', index=False)